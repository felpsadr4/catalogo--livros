{"ast":null,"code":"//a) Importar a classe Livro\nimport Livro from '../modelo/Livro';\n\n//b) Definir a variável livros, como Array<Livro>, contendo ao menos três elementos, no formato JSON\nconst livros = [new Livro(1, 1, 'Programação Web com plataforma Java', 'Este livro apresenta as informações necessárias para que a pessoa estudante de programação possa implementar uma aplicação web utilizando a plataforma Java.', ['João Alexandre Magri']), new Livro(2, 2, 'Aplicativos com Bootstrap e Angular', 'Uma breve introdução ao JavaScript e ao jQuery, linguagens fundamentais ao desenvolvimento web, e mostra as funcionalidades de HTML5', ['Diego Zabot', 'Ecivaldo Matos']), new Livro(3, 3, 'Projetos com Python e Arduino', 'Esta obra apresenta projetos que unem essas tecnologias com o objetivo de criar projetos didáticos, mas que podem ser utilizados ou adaptados para diversos fins.', ['Cláudio Luis Vieira Oliveira', 'Humberto Augusto Piovesana Zanetti'])];\n\n//c) Criar a classe ControleLivro, contendo os métodos obterLivros, incluir e excluir\nclass ControleLivros {\n  //d) Implementar o método obterLivros, com o retorno do vetor livros\n  obterLivros() {\n    return livros;\n  }\n\n  //e) Implementar o método incluir, recebendo um objeto do tipo Livro, que terá o código trocado pelo código mais alto do vetor, incrementado de um, e depois será adicionado ao vetor\n  incluir(novoLivro) {\n    const novoCodigo = livros.reduce((maxCodigo, livro) => Math.max(maxCodigo, livro.codigo), 0) + 1;\n    novoLivro.codigo = novoCodigo;\n    livros.push(novoLivro);\n  }\n  // f) Implementar o método excluir, recebendo um código numérico, que irá encontrar o índice do livro com o código fornecido, através de findIndex, e removê-lo com o uso de splice\n  excluir(codigo) {\n    const livroIndex = livros.findIndex(livro => livro.codigo === codigo);\n    if (livroIndex !== -1) {\n      livros.splice(livroIndex, 1);\n    }\n  }\n}\nexport default ControleLivros;","map":{"version":3,"names":["Livro","livros","ControleLivros","obterLivros","incluir","novoLivro","novoCodigo","reduce","maxCodigo","livro","Math","max","codigo","push","excluir","livroIndex","findIndex","splice"],"sources":["C:/Users/CLIENTE/Documents/desenvolvedor/estacio_desenvolvedor_full_stack/segundo_semestre/nivel3/catalogo-livros - Copia - Copia/livros-react/src/components/controle/ControleLivro.ts"],"sourcesContent":["//a) Importar a classe Livro\r\nimport Livro from '../modelo/Livro';\r\n\r\n\r\n//b) Definir a variável livros, como Array<Livro>, contendo ao menos três elementos, no formato JSON\r\nconst livros: Livro[] = [\r\n    new Livro(1,1, 'Programação Web com plataforma Java', 'Este livro apresenta as informações necessárias para que a pessoa estudante de programação possa implementar uma aplicação web utilizando a plataforma Java.', ['João Alexandre Magri']),\r\n    new Livro(2,2, 'Aplicativos com Bootstrap e Angular', 'Uma breve introdução ao JavaScript e ao jQuery, linguagens fundamentais ao desenvolvimento web, e mostra as funcionalidades de HTML5', ['Diego Zabot', 'Ecivaldo Matos']),\r\n    new Livro(3,3, 'Projetos com Python e Arduino', 'Esta obra apresenta projetos que unem essas tecnologias com o objetivo de criar projetos didáticos, mas que podem ser utilizados ou adaptados para diversos fins.', ['Cláudio Luis Vieira Oliveira', 'Humberto Augusto Piovesana Zanetti'])\r\n];\r\n\r\n//c) Criar a classe ControleLivro, contendo os métodos obterLivros, incluir e excluir\r\nclass ControleLivros {\r\n\r\n    //d) Implementar o método obterLivros, com o retorno do vetor livros\r\n    obterLivros(): Livro[]{\r\n        return livros;\r\n    }\r\n\r\n    //e) Implementar o método incluir, recebendo um objeto do tipo Livro, que terá o código trocado pelo código mais alto do vetor, incrementado de um, e depois será adicionado ao vetor\r\n    incluir(novoLivro: Livro): void{\r\n        const novoCodigo = livros.reduce((maxCodigo, livro) => Math.max(maxCodigo, livro.codigo), 0) +1;\r\n        novoLivro.codigo = novoCodigo;\r\n        livros.push(novoLivro)\r\n    }\r\n    // f) Implementar o método excluir, recebendo um código numérico, que irá encontrar o índice do livro com o código fornecido, através de findIndex, e removê-lo com o uso de splice\r\n    excluir(codigo: number) : void {\r\n        const livroIndex = livros.findIndex(livro => livro.codigo === codigo);\r\n        if (livroIndex !== -1){\r\n            livros.splice(livroIndex, 1);\r\n        }\r\n    }\r\n}\r\n\r\nexport default ControleLivros;"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,iBAAiB;;AAGnC;AACA,MAAMC,MAAe,GAAG,CACpB,IAAID,KAAK,CAAC,CAAC,EAAC,CAAC,EAAE,qCAAqC,EAAE,8JAA8J,EAAE,CAAC,sBAAsB,CAAC,CAAC,EAC/O,IAAIA,KAAK,CAAC,CAAC,EAAC,CAAC,EAAE,qCAAqC,EAAE,sIAAsI,EAAE,CAAC,aAAa,EAAE,gBAAgB,CAAC,CAAC,EAChO,IAAIA,KAAK,CAAC,CAAC,EAAC,CAAC,EAAE,+BAA+B,EAAE,mKAAmK,EAAE,CAAC,8BAA8B,EAAE,oCAAoC,CAAC,CAAC,CAC/R;;AAED;AACA,MAAME,cAAc,CAAC;EAEjB;EACAC,WAAWA,CAAA,EAAW;IAClB,OAAOF,MAAM;EACjB;;EAEA;EACAG,OAAOA,CAACC,SAAgB,EAAO;IAC3B,MAAMC,UAAU,GAAGL,MAAM,CAACM,MAAM,CAAC,CAACC,SAAS,EAAEC,KAAK,KAAKC,IAAI,CAACC,GAAG,CAACH,SAAS,EAAEC,KAAK,CAACG,MAAM,CAAC,EAAE,CAAC,CAAC,GAAE,CAAC;IAC/FP,SAAS,CAACO,MAAM,GAAGN,UAAU;IAC7BL,MAAM,CAACY,IAAI,CAACR,SAAS,CAAC;EAC1B;EACA;EACAS,OAAOA,CAACF,MAAc,EAAS;IAC3B,MAAMG,UAAU,GAAGd,MAAM,CAACe,SAAS,CAACP,KAAK,IAAIA,KAAK,CAACG,MAAM,KAAKA,MAAM,CAAC;IACrE,IAAIG,UAAU,KAAK,CAAC,CAAC,EAAC;MAClBd,MAAM,CAACgB,MAAM,CAACF,UAAU,EAAE,CAAC,CAAC;IAChC;EACJ;AACJ;AAEA,eAAeb,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}